name: CI Pipeline

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: |
          curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          sudo service docker start

      - name: Build and run containers
        run: |
          docker compose -f docker-compose.yml up -d --build
          sleep 10  # Wait for services to start

      - name: Run backend tests
        run: docker compose -f docker-compose.test.yml up --build

      - name: Generate job summary
        run: |
          # Collect the test results and coverage information
          TEST_REPORT_PATH="./backend/reports/test_report.html"
          if [ -f "$TEST_REPORT_PATH" ]; then
            echo "Test report generated: $TEST_REPORT_PATH"
          else
            echo "Test report not found!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          # Add a summary of test results to the GitHub Actions job summary
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "Test results are available in the [HTML report](./backend/reports/test_report.html)." >> $GITHUB_STEP_SUMMARY
          
          # Optionally, you can print coverage summary to the job summary:
          echo "## Coverage Results" >> $GITHUB_STEP_SUMMARY
          echo "Coverage reports are available in the [HTML coverage report](./backend/htmlcov/index.html)." >> $GITHUB_STEP_SUMMARY

      - name: Comment summary
        uses: actions/github-script@v7
        with:
          script: |
            octokit.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/htmlcov/

      - name: Upload Test Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: backend/reports/

      - name: Stop containers
        run: docker compose -f docker-compose.test.yml down

name: Time Triggered CI

# TODO: Change
on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and run containers
        run: |
          docker compose build frontend
          docker compose up frontend
          sleep 10  # Wait for services to start

      - name: Stop containers
        if: always()
        run: docker compose down frontend

      - name: Save Docker Image
        run: docker save -o ${{ runner.temp }}/frontend.tar frontend:latest

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ${{ runner.temp }}/frontend.tar

  security-and-licence:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download frontend
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ${{ runner.temp }}

      - name: Load images
        run:
          docker load --input ${{ runner.temp }}/frontend.tar

      # SBOM generation
      - name: Install Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM for Each Docker Image
        run: |
          for service in $(docker compose config --services); do
            image=$(docker images -q $service)
            echo "$image"
            if [ -z "$image" ]; then
              echo "No image found for $service, skipping SBOM generation."
            else
              echo "Scanning $image"
              syft $image -o spdx-json > sbom-$service.json
            fi
          done

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: sboms/

      # Vulnerability scanning
      - name: Install Grype
        run: curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Each Docker Image for Vulnerabilities
        run: |
          for service in $(docker compose config --services); do
            image=$(docker images -q $service)
            if [ -z "$image" ]; then
              echo "No image found for $service, skipping SBOM generation."
            else
              echo "Scanning vulnerabilities in $image"
              grype $image --fail-on critical
            fi
          done

      # Check License Compliance using GitHub's Licensee tool
      - name: Install Licensee
        run: sudo apt-get install licensee

      - name: Check Licenses in Docker Images
        run: |
          for service in $(docker compose config --services); do
            image=$(docker images -q $service)
            if [ -z "$image" ]; then
              echo "No image found for $service, skipping SBOM generation."
            else
              echo "Checking licenses in $image"
              docker run --rm -v $(pwd):/project -w /project licensee detect . --json > license-report-$service.json
              cat license-report-$service.json
            fi
          done